// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { LocalObjectReference } from "./LocalObjectReference";

export class SecretEnvSource {
  static encode(message: SecretEnvSource, writer: Writer): void {
    const localObjectReference = message.localObjectReference;
    if (localObjectReference !== null) {
      writer.uint32(10);
      writer.fork();
      LocalObjectReference.encode(localObjectReference, writer);
      writer.ldelim();
    }

    writer.uint32(16);
    writer.bool(message.optional);
  }

  static decode(reader: Reader, length: i32): SecretEnvSource {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new SecretEnvSource();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.localObjectReference = LocalObjectReference.decode(
            reader,
            reader.uint32()
          );
          break;

        case 2:
          message.optional = reader.bool();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  localObjectReference: LocalObjectReference | null;
  optional: bool;

  constructor(
    localObjectReference: LocalObjectReference | null = null,
    optional: bool = false
  ) {
    this.localObjectReference = localObjectReference;
    this.optional = optional;
  }
}
