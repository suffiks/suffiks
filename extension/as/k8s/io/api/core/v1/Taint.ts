// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { Time } from "../../../apimachinery/pkg/apis/meta/v1/Time";

export class Taint {
  static encode(message: Taint, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.key);

    writer.uint32(18);
    writer.string(message.value);

    writer.uint32(26);
    writer.string(message.effect);

    const timeAdded = message.timeAdded;
    if (timeAdded !== null) {
      writer.uint32(34);
      writer.fork();
      Time.encode(timeAdded, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): Taint {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Taint();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.key = reader.string();
          break;

        case 2:
          message.value = reader.string();
          break;

        case 3:
          message.effect = reader.string();
          break;

        case 4:
          message.timeAdded = Time.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  key: string;
  value: string;
  effect: string;
  timeAdded: Time | null;

  constructor(
    key: string = "",
    value: string = "",
    effect: string = "",
    timeAdded: Time | null = null
  ) {
    this.key = key;
    this.value = value;
    this.effect = effect;
    this.timeAdded = timeAdded;
  }
}
