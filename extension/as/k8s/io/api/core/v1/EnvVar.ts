// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { EnvVarSource } from "./EnvVarSource";

export class EnvVar {
  static encode(message: EnvVar, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.name);

    writer.uint32(18);
    writer.string(message.value);

    const valueFrom = message.valueFrom;
    if (valueFrom !== null) {
      writer.uint32(26);
      writer.fork();
      EnvVarSource.encode(valueFrom, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): EnvVar {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new EnvVar();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.name = reader.string();
          break;

        case 2:
          message.value = reader.string();
          break;

        case 3:
          message.valueFrom = EnvVarSource.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  name: string;
  value: string;
  valueFrom: EnvVarSource | null;

  constructor(
    name: string = "",
    value: string = "",
    valueFrom: EnvVarSource | null = null
  ) {
    this.name = name;
    this.value = value;
    this.valueFrom = valueFrom;
  }
}
