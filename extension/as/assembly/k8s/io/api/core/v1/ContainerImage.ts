// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";

export class ContainerImage {
  static encode(message: ContainerImage, writer: Writer): void {
    const names = message.names;
    if (names.length !== 0) {
      for (let i: i32 = 0; i < names.length; ++i) {
        writer.uint32(10);
        writer.string(names[i]);
      }
    }

    writer.uint32(16);
    writer.int64(message.sizeBytes);
  }

  static decode(reader: Reader, length: i32): ContainerImage {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new ContainerImage();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.names.push(reader.string());
          break;

        case 2:
          message.sizeBytes = reader.int64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  names: Array<string>;
  sizeBytes: i64;

  constructor(names: Array<string> = [], sizeBytes: i64 = 0) {
    this.names = names;
    this.sizeBytes = sizeBytes;
  }
}
