// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { EphemeralContainerCommon } from "./EphemeralContainerCommon";

export class EphemeralContainer {
  static encode(message: EphemeralContainer, writer: Writer): void {
    const ephemeralContainerCommon = message.ephemeralContainerCommon;
    if (ephemeralContainerCommon !== null) {
      writer.uint32(10);
      writer.fork();
      EphemeralContainerCommon.encode(ephemeralContainerCommon, writer);
      writer.ldelim();
    }

    writer.uint32(18);
    writer.string(message.targetContainerName);
  }

  static decode(reader: Reader, length: i32): EphemeralContainer {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new EphemeralContainer();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.ephemeralContainerCommon = EphemeralContainerCommon.decode(
            reader,
            reader.uint32()
          );
          break;

        case 2:
          message.targetContainerName = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  ephemeralContainerCommon: EphemeralContainerCommon | null;
  targetContainerName: string;

  constructor(
    ephemeralContainerCommon: EphemeralContainerCommon | null = null,
    targetContainerName: string = ""
  ) {
    this.ephemeralContainerCommon = ephemeralContainerCommon;
    this.targetContainerName = targetContainerName;
  }
}
