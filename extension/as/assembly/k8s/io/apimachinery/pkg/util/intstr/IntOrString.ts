// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";

export class IntOrString {
  static encode(message: IntOrString, writer: Writer): void {
    writer.uint32(8);
    writer.int64(message.type);

    writer.uint32(16);
    writer.int32(message.intVal);

    writer.uint32(26);
    writer.string(message.strVal);
  }

  static decode(reader: Reader, length: i32): IntOrString {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new IntOrString();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.type = reader.int64();
          break;

        case 2:
          message.intVal = reader.int32();
          break;

        case 3:
          message.strVal = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  type: i64;
  intVal: i32;
  strVal: string;

  constructor(type: i64 = 0, intVal: i32 = 0, strVal: string = "") {
    this.type = type;
    this.intVal = intVal;
    this.strVal = strVal;
  }
}
