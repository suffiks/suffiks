name: Go tests

on:
  push:
    branches-ignore: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  # Let golangci-lint comment on PRs
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install asdf
        uses: asdf-vm/actions/setup@v2

      - name: asdf cache
        id: asdf-cache
        uses: actions/cache@v3
        with:
          path: ~/.asdf/
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}

      - name: Install CD tools from .tool-versions
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        uses: asdf-vm/actions/install@v2
        with:
          # Go is a dependency on two of the tools, so we install it first.
          before_install: |
            asdf install golang latest
            asdf global golang latest

      - name: Find go cache dir
        id: go-cache
        run: |
          # Clear cache dirs to avoid error when restoring
          go clean -cache
          rm -rf $(go env GOMODCACHE)
          echo "gocache=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "gomodcache=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      - name: Cache go modules
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.go-cache.outputs.gocache }}
            ${{ steps.go-cache.outputs.gomodcache }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Tests
        run: make test

      - name: Check generated code
        run: |
          # make generate and make manifests are run in the test step, so we only
          # need to run the other two here.
          make client
          make gen-extensions
          make gen-wasi-env
          git diff --exit-code --name-only

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.6

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          skip-pkg-cache: true

          args: --timeout=30m
