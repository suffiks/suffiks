// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { EnvFromType } from "./EnvFromType";

export class EnvFrom {
  static encode(message: EnvFrom, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.name);

    writer.uint32(16);
    writer.bool(message.optional);

    writer.uint32(24);
    writer.int32(message.type);
  }

  static decode(reader: Reader, length: i32): EnvFrom {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new EnvFrom();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.name = reader.string();
          break;

        case 2:
          message.optional = reader.bool();
          break;

        case 3:
          message.type = reader.int32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  name: string;
  optional: bool;
  type: EnvFromType;

  constructor(
    name: string = "",
    optional: bool = false,
    type: EnvFromType = 0
  ) {
    this.name = name;
    this.optional = optional;
    this.type = type;
  }
}
