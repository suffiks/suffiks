// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { ConfigMapNodeConfigSource } from "./ConfigMapNodeConfigSource";

export class NodeConfigSource {
  static encode(message: NodeConfigSource, writer: Writer): void {
    const configMap = message.configMap;
    if (configMap !== null) {
      writer.uint32(18);
      writer.fork();
      ConfigMapNodeConfigSource.encode(configMap, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): NodeConfigSource {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new NodeConfigSource();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 2:
          message.configMap = ConfigMapNodeConfigSource.decode(
            reader,
            reader.uint32()
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  configMap: ConfigMapNodeConfigSource | null;

  constructor(configMap: ConfigMapNodeConfigSource | null = null) {
    this.configMap = configMap;
  }
}
