// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";

export class ScopedResourceSelectorRequirement {
  static encode(
    message: ScopedResourceSelectorRequirement,
    writer: Writer
  ): void {
    writer.uint32(10);
    writer.string(message.scopeName);

    writer.uint32(18);
    writer.string(message.operator);

    const values = message.values;
    if (values.length !== 0) {
      for (let i: i32 = 0; i < values.length; ++i) {
        writer.uint32(26);
        writer.string(values[i]);
      }
    }
  }

  static decode(
    reader: Reader,
    length: i32
  ): ScopedResourceSelectorRequirement {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new ScopedResourceSelectorRequirement();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.scopeName = reader.string();
          break;

        case 2:
          message.operator = reader.string();
          break;

        case 3:
          message.values.push(reader.string());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  scopeName: string;
  operator: string;
  values: Array<string>;

  constructor(
    scopeName: string = "",
    operator: string = "",
    values: Array<string> = []
  ) {
    this.scopeName = scopeName;
    this.operator = operator;
    this.values = values;
  }
}
