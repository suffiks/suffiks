// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";

export class VsphereVirtualDiskVolumeSource {
  static encode(message: VsphereVirtualDiskVolumeSource, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.volumePath);

    writer.uint32(18);
    writer.string(message.fsType);

    writer.uint32(26);
    writer.string(message.storagePolicyName);

    writer.uint32(34);
    writer.string(message.storagePolicyID);
  }

  static decode(reader: Reader, length: i32): VsphereVirtualDiskVolumeSource {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new VsphereVirtualDiskVolumeSource();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.volumePath = reader.string();
          break;

        case 2:
          message.fsType = reader.string();
          break;

        case 3:
          message.storagePolicyName = reader.string();
          break;

        case 4:
          message.storagePolicyID = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  volumePath: string;
  fsType: string;
  storagePolicyName: string;
  storagePolicyID: string;

  constructor(
    volumePath: string = "",
    fsType: string = "",
    storagePolicyName: string = "",
    storagePolicyID: string = ""
  ) {
    this.volumePath = volumePath;
    this.fsType = fsType;
    this.storagePolicyName = storagePolicyName;
    this.storagePolicyID = storagePolicyID;
  }
}
