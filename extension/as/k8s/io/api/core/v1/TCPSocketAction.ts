// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { IntOrString } from "../../../apimachinery/pkg/util/intstr/IntOrString";

export class TCPSocketAction {
  static encode(message: TCPSocketAction, writer: Writer): void {
    const port = message.port;
    if (port !== null) {
      writer.uint32(10);
      writer.fork();
      IntOrString.encode(port, writer);
      writer.ldelim();
    }

    writer.uint32(18);
    writer.string(message.host);
  }

  static decode(reader: Reader, length: i32): TCPSocketAction {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new TCPSocketAction();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.port = IntOrString.decode(reader, reader.uint32());
          break;

        case 2:
          message.host = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  port: IntOrString | null;
  host: string;

  constructor(port: IntOrString | null = null, host: string = "") {
    this.port = port;
    this.host = host;
  }
}
