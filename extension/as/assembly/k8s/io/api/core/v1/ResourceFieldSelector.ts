// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { Quantity } from "../../../apimachinery/pkg/api/resource/Quantity";

export class ResourceFieldSelector {
  static encode(message: ResourceFieldSelector, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.containerName);

    writer.uint32(18);
    writer.string(message.resource);

    const divisor = message.divisor;
    if (divisor !== null) {
      writer.uint32(26);
      writer.fork();
      Quantity.encode(divisor, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): ResourceFieldSelector {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new ResourceFieldSelector();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.containerName = reader.string();
          break;

        case 2:
          message.resource = reader.string();
          break;

        case 3:
          message.divisor = Quantity.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  containerName: string;
  resource: string;
  divisor: Quantity | null;

  constructor(
    containerName: string = "",
    resource: string = "",
    divisor: Quantity | null = null
  ) {
    this.containerName = containerName;
    this.resource = resource;
    this.divisor = divisor;
  }
}
