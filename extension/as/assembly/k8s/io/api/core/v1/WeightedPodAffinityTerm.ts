// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { PodAffinityTerm } from "./PodAffinityTerm";

export class WeightedPodAffinityTerm {
  static encode(message: WeightedPodAffinityTerm, writer: Writer): void {
    writer.uint32(8);
    writer.int32(message.weight);

    const podAffinityTerm = message.podAffinityTerm;
    if (podAffinityTerm !== null) {
      writer.uint32(18);
      writer.fork();
      PodAffinityTerm.encode(podAffinityTerm, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): WeightedPodAffinityTerm {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new WeightedPodAffinityTerm();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.weight = reader.int32();
          break;

        case 2:
          message.podAffinityTerm = PodAffinityTerm.decode(
            reader,
            reader.uint32()
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  weight: i32;
  podAffinityTerm: PodAffinityTerm | null;

  constructor(weight: i32 = 0, podAffinityTerm: PodAffinityTerm | null = null) {
    this.weight = weight;
    this.podAffinityTerm = podAffinityTerm;
  }
}
