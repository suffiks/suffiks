// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { ObjectMeta } from "../../../apimachinery/pkg/apis/meta/v1/ObjectMeta";
import { PersistentVolumeClaimSpec } from "./PersistentVolumeClaimSpec";
import { PersistentVolumeClaimStatus } from "./PersistentVolumeClaimStatus";

export class PersistentVolumeClaim {
  static encode(message: PersistentVolumeClaim, writer: Writer): void {
    const metadata = message.metadata;
    if (metadata !== null) {
      writer.uint32(10);
      writer.fork();
      ObjectMeta.encode(metadata, writer);
      writer.ldelim();
    }

    const spec = message.spec;
    if (spec !== null) {
      writer.uint32(18);
      writer.fork();
      PersistentVolumeClaimSpec.encode(spec, writer);
      writer.ldelim();
    }

    const status = message.status;
    if (status !== null) {
      writer.uint32(26);
      writer.fork();
      PersistentVolumeClaimStatus.encode(status, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): PersistentVolumeClaim {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new PersistentVolumeClaim();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.metadata = ObjectMeta.decode(reader, reader.uint32());
          break;

        case 2:
          message.spec = PersistentVolumeClaimSpec.decode(
            reader,
            reader.uint32()
          );
          break;

        case 3:
          message.status = PersistentVolumeClaimStatus.decode(
            reader,
            reader.uint32()
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  metadata: ObjectMeta | null;
  spec: PersistentVolumeClaimSpec | null;
  status: PersistentVolumeClaimStatus | null;

  constructor(
    metadata: ObjectMeta | null = null,
    spec: PersistentVolumeClaimSpec | null = null,
    status: PersistentVolumeClaimStatus | null = null
  ) {
    this.metadata = metadata;
    this.spec = spec;
    this.status = status;
  }
}
