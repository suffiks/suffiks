// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v3.20.1

import { Writer, Reader } from "as-proto/assembly";
import { DownwardAPIVolumeFile } from "./DownwardAPIVolumeFile";

export class DownwardAPIVolumeSource {
  static encode(message: DownwardAPIVolumeSource, writer: Writer): void {
    const items = message.items;
    for (let i: i32 = 0; i < items.length; ++i) {
      writer.uint32(10);
      writer.fork();
      DownwardAPIVolumeFile.encode(items[i], writer);
      writer.ldelim();
    }

    writer.uint32(16);
    writer.int32(message.defaultMode);
  }

  static decode(reader: Reader, length: i32): DownwardAPIVolumeSource {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new DownwardAPIVolumeSource();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.items.push(
            DownwardAPIVolumeFile.decode(reader, reader.uint32())
          );
          break;

        case 2:
          message.defaultMode = reader.int32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  items: Array<DownwardAPIVolumeFile>;
  defaultMode: i32;

  constructor(items: Array<DownwardAPIVolumeFile> = [], defaultMode: i32 = 0) {
    this.items = items;
    this.defaultMode = defaultMode;
  }
}
